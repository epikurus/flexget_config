variables: secrets.yml
schedules:
  - tasks: ['populate-*', 'clean-*', 'update-*']
    schedule:
      hour: 0
  - tasks: ['*-rss']
    schedule:
      minute: 0,30
  - tasks: ['*-nextep','fill-*','*-discover', '*-manual']
    schedule:
      hour: '*/2'
  - tasks: ['move-*', download-subtitles]
    schedule:
      minute: 15,45

templates:

##### Series config
#
  series:
    tvmaze_lookup: yes
    include: series.yml
    configure_series:
      from:
        entry_list: trakt-series
      settings:
        identified_by: ep
        timeframe: 16 hours
        target: hdtv+ 1080p
        quality: webrip+ 720p-1080p
        propers: 16 hours
        specials: no
        season_packs: 5
    content_size:
      min: 350
    content_filter:
      require:
        - '*.mkv'

##### Anime series config
#
  anime-series:
    include: anime.yml
    configure_series:
      from:
        entry_list: myanimelist-series
      settings:
        identified_by: sequence
        timeframe: 4 hours
        target: 1080p
        quality: 720p-1080p
        special_ids:
          - OVA
    content_filter:
      require:
        - '*.mkv'
        - '*.mp4'

##### Anime movies config
#
  anime-movies:
    quality: 720p+ !workprint !cam !ts !tc !r5
    content_size:
      min: 700
      max: 10000

##### Movies config
#
  movies-1080p:
    tmdb_lookup: yes
    movie_list: trakt-movies
    quality: 1080p webrip+
    content_size:
      min: 1000
      max: 10000

  movies-720p:
    tmdb_lookup: yes
    movie_list: trakt-movies
    quality: 720p webrip+
    content_size:
      min: 500
      max: 5000

##### Transmission config
#
  transmission-anchors:
    _transmission-settings: &transmission-settings
      host: "{? transmission.host ?}"
      port: 9091
      username: "{? transmission.user ?}"
      password: "{? transmission.pass ?}"

##### Common rejections
#
  reject:
    regexp:
      reject:
        - \b(s|d)ub(s|bed|lado|titulado)?\b
        - \bhc\b
        - \bdual\b
        - \b3d\b
        - \bfre(nch)?\b
        - \bita(lian)?\b
        - \bspa(nish)?\b
        - \bger(man)?\b
        - \bcastellano\b
        - \brus(sian)?\b
    content_filter:
      reject:
        - '*.rar'
        - '*.zip'

##### Anime rejections
#
  anime-reject:
    regexp:
      reject:
        - \bdub\b
        - \bhard(subs|subbed)?\b
        - \bpv\b
        - \b60fps\b


##### ADVANCED SETTINGS #####

##### Global config
#
  global:
    no_entries_ok: yes
    pathscrub: windows
    free_space:
      path: "/{? folder.root ?}"
      space: 5000
    log_filter:
    - message: "is already marked seen in the task populate-series-db"
    - message: "is before begin value"
    - message: "because entity has already been downloaded"
    - message: "because quality already downloaded"
    - message: "appears to be an episode pack"
      plugin: parser_internal
    - message: "rejecting"
      plugin: content_size
    - message: "Field `title` is now "
      plugin: manipulate

##### Common torrents config
#
  torrents:
    torrent_alive:
      min_seeds: 3
      reject_for: 15 minutes
    magnets: no
    # Might need to disable if you are getting errors connecting to https sources
    # Can remove if you upgrade to python 2.7.9+ or install requests[security]
    #verify_ssl_certificates: no
    domain_delay:
      nyaa: 3 seconds
      limetorrents: 3 seconds

##### Transmission series config
#
  transmission-series:
    transmission:
      <<: *transmission-settings
      main_file_only: yes
      include_subs: yes
      rename_like_files: yes
      content_filename: "{{tvmaze_series_name|default(series_name)|pathscrub}} - {{series_id}}{% if tvmaze_episode_name|default(False) %} - {{tvmaze_episode_name|pathscrub}}{% endif %}{% if quality|default(False) %} - [{{quality}}]{% endif %}"
      path: "/{? folder.root ?}{? folder.downseries ?}{{tvmaze_series_name|default(series_name)|pathscrub}}/"

##### Transmission anime config
#
  transmission-anime:
    transmission:
      <<: *transmission-settings
      main_file_only: yes
      path: "/{? folder.root ?}{? folder.downanime ?}{{title}}/"

##### Transmission anime series config
#
  transmission-anime-series:
    transmission:
      <<: *transmission-settings
      main_file_only: yes
      content_filename: "{{series_name}} - ep{{series_id}} - [{{quality}}]"
      path: "/{? folder.root ?}{? folder.downanime ?}{{series_name|pathscrub}}/"

##### Transmission anime movies config
#
  transmission-anime-movies:
    transmission:
      <<: *transmission-settings
      main_file_only: yes
      content_filename: "{{regexp}} - ep1 - [{{quality}}]"
      path: "/{? folder.root ?}{? folder.downanime ?}{{regexp}}/"

##### Transmission movies config
#
  transmission-movies:
    transmission:
      <<: *transmission-settings
      main_file_only: yes
      include_subs: yes
      rename_like_files: yes
      content_filename: "{{tmdb_name|pathscrub}} ({{tmdb_year}}){% if quality|default(False) %} - [{{quality}}]{% endif %}"
      path: "/{? folder.root ?}{? folder.downmovies ?}{{movie_name|pathscrub}}"

##### Pushbullet config
#
  pushbullet:
    notify:
      entries:
        title: "[flexget] {{task}}"
        message: "{{title}}"
        via:
          - pushbullet:
              api_key: "{? pushbullet.api ?}"

##### Disable builtins for some tasks
#
  disable-seen-retry:
    disable:
      - seen
      - seen_info_hash
      - retry_failed

##### Series metainfo mainly for move and update tasks
#
  series-metainfo:
    metainfo_series: yes
    tvmaze_lookup: yes

##### Guessit parsing for some series tasks and anime, not applied to all tasks because it used to cause issues with some series
#
  series-guessit:
    parsing:
      series: guessit

##### Movies metainfo mainly for move and update tasks
#
  movies-metainfo:
    tmdb_lookup: yes
    parsing:
      movie: guessit

##### Guessit parsing for anime movies task
#
  movies-guessit:
    parsing:
      movie: guessit

tasks:

########## SERIES ##########

##### Populates the series database with the files on the library, to avoid duplicate downloads
#
  populate-series-db:
    priority: 1
    template:
      - series-metainfo
    seen: local
    filesystem:
      path: "/{? folder.root ?}{? folder.series ?}"
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    accept_all: yes
    configure_series:
      from:
        filesystem:
          path: "/{? folder.root ?}{? folder.series ?}"
          retrieve: dirs
      settings:
        tracking: no


##### Fetches the next unwatched episode from the series watchlist and adds it to a custom entry list
#
  get-series-nextep:
    priority: 2
    template:
      - disable-seen-retry
      - series-metainfo
    list_clear:
      what:
        - entry_list: trakt-series-begin
    next_trakt_episodes:
      account: "{? trakt.account ?}"
      list: "{? trakt.series ?}"
      context: watched
      position: next
    accept_all: yes
    list_add:
      - entry_list: trakt-series-begin

##### Formats the output of the previous task to tvmaze format and sets the begin episode for the series
#
  set-series-nextep:
    priority: 3
    template:
      - disable-seen-retry
      - series-metainfo
    entry_list: trakt-series-begin
    accept_all: yes
    set:
      series_name: "{{tvmaze_series_name|escape|replace('&#39;', '')}}"
    set_series_begin: yes


##### Fetch, format and output trakt series list to a custom entry list
#
  fill-series-list:
    priority: 4
    template:
      - disable-seen-retry
      - series-metainfo
    list_clear:
      what:
        - entry_list: trakt-series
    trakt_list:
      account: "{? trakt.account ?}"
      list: "{? trakt.series ?}"
      type: shows
    accept_all: yes
    set:
      title: "{{tvmaze_series_name|escape|replace('&#39;', '')}}"
    list_add:
      - entry_list: trakt-series


##### Download episodes from manually downloaded torrents
#
  download-series-manual:
    priority: 6
    template:
      - disable-seen-retry
      - series-metainfo
      - series-guessit
      - transmission-series
      - pushbullet
    filesystem:
      path: "/{? folder.root ?}{? folder.downseries ?}"
      mask: '*.torrent'
    accept_all: yes
    exec:
      on_output:
        for_accepted: rm -f "{{location}}"


##### Download episodes from RSS feeds
#
  download-series-rss:
    priority: 7
    template:
      - series
      - reject
      - torrents
      - transmission-series
      - pushbullet
    inputs:
      - rss: https://eztv.re/ezrss.xml
      - rss: https://www.limetorrents.info/rss/20/


##### Discover and download season packs
#
  download-seasons-discover:
    priority: 8
    template:
      - series
      - reject
      - torrents
      - transmission-series
      - pushbullet
    magnets: yes
    convert_magnet:
      timeout: 10 seconds
      force: yes
    discover:
      release_estimations: strict
      interval: 15 minutes
      what:
        - next_series_seasons:
            from_start: yes
      from:
        - piratebay:
            category: highres tv
        - limetorrents:
            category: tv


##### Discover and download older episodes and pilots from recently added series
#
  download-series-discover:
    priority: 9
    template:
      - series
      - reject
      - torrents
      - transmission-series
      - pushbullet
    magnets: yes
    convert_magnet:
      timeout: 10 seconds
      force: yes
    discover:
      release_estimations: strict
      interval: 15 minutes
      what:
        - next_series_episodes:
            from_start: yes
      from:
        - piratebay:
            category: highres tv
        - limetorrents:
            category: tv


########## ANIME ##########

##### Fetch, format and output myanimelist series list to a custom entry list
#
  fill-anime-series-list:
    priority: 11
    template:
      - disable-seen-retry
    metainfo_series: yes
    list_clear:
      what:
        - entry_list: myanimelist-series
    domain_delay:
      myanimelist.net: 5 seconds
    myanimelist:
      user_id: "{? myanimelist.id ?}"
      list: both
      type: shows
    accept_all: yes
    set:
      title: "{{myanimelist_name|re_replace('[-/:;.★](?=[a-zA-Z])', ' ')|re_replace('[:;](?![a-zA-Z])|[`´()]|TV|', '')|re_replace('Season ', 'S')|re_replace('  +', ' ')}}"
    list_add:
      - entry_list: myanimelist-series


##### Fill the movie queue with movies from trakt list
#
  fill-anime-movies-queue:
    priority: 13
    seen:
      fields:
        - myanimelist_name
    domain_delay:
      myanimelist.net: 5 seconds
    myanimelist:
      user_id: "{? myanimelist.id ?}"
      list: both
      type: movies
    accept_all: yes
    set:
      title: "{{myanimelist_name|re_replace('[-/:;.★](?=[a-zA-Z])', ' ')|re_replace('[:;](?![a-zA-Z])|[`´()]', '')}}"
    list_add:
      - regexp_list: myanimelist-movies


##### Download anime from manually downloaded torrents
#
  download-anime-manual:
    priority: 14
    template:
      - disable-seen-retry
      - transmission-anime
      - pushbullet
    filesystem:
      path: "/{? folder.root ?}{? folder.downanime ?}"
      mask: '*.torrent'
    accept_all: yes
    exec:
      on_output:
        for_accepted: rm -f "{{location}}"


##### Download anime from RSS feed from verified groups
#
  download-anime-series-rss:
    priority: 15
    template:
      - anime-series
      - anime-reject
      - torrents
      - transmission-anime-series
      - pushbullet
    inputs:
      - rss: https://nyaa.si/?page=rss&c=1_2&f=2


##### Download anime from RSS feed from all groups
#
  download-anime-series-all-rss:
    priority: 16
    delay: 2 days
    template:
      - anime-series
      - anime-reject
      - torrents
      - transmission-anime-series
      - pushbullet
    inputs:
      - rss: https://nyaa.si/?page=rss&c=1_2


##### Discover and download anime from verified groups
#
  download-anime-series-discover:
    priority: 18
    template:
      - anime-series
      - anime-reject
      - torrents
      - transmission-anime-series
      - pushbullet
    metainfo_series: yes
    discover:
      release_estimations: ignore
      interval: 15 minutes
      what:
        - next_series_episodes:
            from_start: yes
            backfill: yes
      from:
        - nyaa:
            category: anime eng
            filter: trusted only


##### Discover and download anime from all groups
#
  download-anime-series-all-discover:
    priority: 19
    delay: 2 days
    template:
      - anime-series
      - anime-reject
      - torrents
      - transmission-anime-series
      - pushbullet
    metainfo_series: yes
    discover:
      release_estimations: ignore
      interval: 15 minutes
      what:
        - next_series_episodes:
            from_start: yes
            backfill: yes
      from:
        - nyaa:
            category: anime eng
            filter: all


##### Discover and download anime movies
#
  download-anime-movies-discover:
    priority: 20
    template:
      - anime-movies
      - anime-reject
      - torrents
      - transmission-anime-movies
      - pushbullet
    discover:
      release_estimations: ignore
      interval: 15 minutes
      what:
        - regexp_list: myanimelist-movies
      from:
        - nyaa:
            category: anime eng
            filter: all
    list_match:
      from:
        - regexp_list: myanimelist-movies


########## MOVIES ##########

##### Remove manually downloaded movies from the movie queue and trakt list
#
  clean-movies-queue:
    priority: 31
    template:
      - disable-seen-retry
      - movies-metainfo
    filesystem:
      path: "/{? folder.root ?}{? folder.movies ?}"
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    accept_all: yes
    list_remove:
      - movie_list: trakt-movies
      - trakt_list:
          account: "{? trakt.account ?}"
          list: "{? trakt.movies ?}"
          type: movies


##### Fill the movie queue with movies from trakt list
#
  fill-movies-queue:
    priority: 32
    trakt_list:
      account: "{? trakt.account ?}"
      list: "{? trakt.movies ?}"
      type: movies
      strip_dates: yes
    accept_all: yes
    list_add:
      - movie_list: trakt-movies


##### Download movies manually downloaded torrents
#
  download-movies-manual:
    priority: 34
    template:
      - disable-seen-retry
      - movies-metainfo
      - transmission-movies
      - pushbullet
    filesystem:
      path: "/{? folder.root ?}{? folder.downmovies ?}"
      mask: '*.torrent'
    accept_all: yes
    exec:
      on_output:
        for_accepted: rm -f "{{location}}"
    list_remove:
      - movie_list: trakt-movies
      - trakt_list:
          account: "{? trakt.account ?}"
          list: "{? trakt.movies ?}"
          type: movies


##### Discover and download 1080p movies
#
  download-movies-1080p-discover:
    priority: 37
    template:
      - movies-1080p
      - reject
      - torrents
      - transmission-movies
      - pushbullet
    exists_movie:
      - "/{? folder.root ?}{? folder.downmovies ?}"
      - "/{? folder.root ?}{? folder.movies ?}"
    magnets: yes
    convert_magnet:
      timeout: 10 seconds
      force: yes
    discover:
      release_estimations: loose
      interval: 15 minutes
      what:
        - movie_list: trakt-movies
      from:
        - piratebay:
            category: highres movies
        - limetorrents:
            category: movies
    list_match:
      from:
        - movie_list: trakt-movies
    list_remove:
      - trakt_list:
          account: "{? trakt.account ?}"
          list: "{? trakt.movies ?}"
          type: movies


##### Discover and download 720p movies, if the movie is not recent
#
  download-movies-720p-discover:
    priority: 38
    template:
      - movies-720p
      - reject
      - torrents
      - transmission-movies
      - pushbullet
    exists_movie:
      - "/{? folder.root ?}{? folder.downmovies ?}"
      - "/{? folder.root ?}{? folder.movies ?}"
    magnets: yes
    convert_magnet:
      timeout: 10 seconds
      force: yes
    discover:
      release_estimations: loose
      interval: 15 minutes
      what:
        - movie_list: trakt-movies
      from:
        - piratebay:
            category: highres movies
        - limetorrents:
            category: movies
    if:
      - tmdb_year > now.year - 1: reject
    list_match:
      from:
        - movie_list: trakt-movies
    list_remove:
      - trakt_list:
          account: "{? trakt.account ?}"
          list: "{? trakt.movies ?}"
          type: movies


########## LIBRARY ##########

##### Move series from downloads folder to respective folders, along with existing subtitles and adding the files to the subtitle queue
#
  move-series:
    priority: 41
    template:
      - disable-seen-retry
      - series-metainfo
      - series-guessit
    filesystem:
      path: "/{? folder.root ?}{? folder.downseries ?}"
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    accept_all: yes
    move:
      to: "/{? folder.root ?}{? folder.series ?}{{tvmaze_series_name|escape|replace('&#39;', '')|pathscrub}}/"
      rename: "{{tvmaze_series_name|escape|replace('&#39;', '')|pathscrub}} - {{series_id}}{% if tvmaze_episode_name|default(False) %} - {{tvmaze_episode_name|pathscrub}}{% endif %}{% if quality|default(False) %} - [{{quality}}]{% endif %}"
      along:
        extensions:
          - srt
          - sub
        subdirs:
          - Subs
      clean_source: 50
    list_add:
      - subtitle_list:
          list: subtitles
          path: "{{location}}"
          remove_after: 2 days
    exec:
      on_exit:
        phase: find "/{? folder.root ?}{? folder.downseries ?}"* -type d -empty -delete


##### Move anime from downloads folder to respective folders
#
  move-anime:
    priority: 42
    template:
      - disable-seen-retry
      - series-guessit
    filesystem:
      path: "/{? folder.root ?}{? folder.downanime ?}"
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    metainfo_series: yes
    accept_all: yes
    move:
      to: "/{? folder.root ?}{? folder.anime ?}{{series_name|default(title)|pathscrub}}/"
      along:
        extensions:
          - srt
      clean_source: 50
    exec:
      allow_background: yes
      on_exit:
        phase:
          - find "/{? folder.root ?}{? folder.downanime ?}"* -type d -empty -delete
### REMOVE THE LINES BELOW IF YOU DONT WANT TO RENAME ANIME WITH THE EXTERNAL SCRIPT
          - "{? script.animerenamer ?}"
      on_output:
        for_accepted: echo "{{location}}" >> "{? list.animerename ?}"


##### Move movies from downloads folder to the movies folder, along with possible subtitles and adding the files to the subtitle queue
#
  move-movies:
    priority: 43
    template:
      - disable-seen-retry
      - movies-metainfo
    filesystem:
      path: "/{? folder.root ?}{? folder.downmovies ?}"
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    accept_all: yes
    regexp:
      reject:
        - \btrailer\b
        - \bsample\b
    move:
      to: "/{? folder.root ?}{? folder.movies ?}"
      rename: "{{tmdb_name|pathscrub}} ({{tmdb_year}}){% if quality|default(False) %} - [{{quality}}]{% endif %}"
      along:
        extensions:
          - srt
          - sub
        subdirs:
          - Subs
      clean_source: 100
    list_add:
      - subtitle_list:
          list: subtitles
          path: "{{location}}"
          remove_after: 7 days
    exec:
      on_exit:
        phase: find "/{? folder.root ?}{? folder.downmovies ?}"* -type d -empty -delete


##### Download subtitles for the previously queued files
#
  download-subtitles:
    priority: 45
    template:
      - disable-seen-retry
    subtitle_list:
      list: subtitles
    list_match:
      from:
        - subtitle_list:
            list: subtitles
    subliminal:
      exact_match: yes
      languages:
        - eng


##### Clean finished torrents from transmission
#
  clean-transmission:
    priority: 47
    template:
      - disable-seen-retry
    from_transmission:
      <<: *transmission-settings
    if:
      - transmission_date_done == None: fail
      - not transmission_seed_ratio_ok and not transmission_idle_limit_ok: reject
      - transmission_date_done < now.astimezone() - timedelta(days=1): accept
    transmission:
      <<: *transmission-settings
      action: remove


########## UPDATES ##########

##### Update trakt series list from local series folders, excluding the ones that already ended
#
  update-series-list:
    priority: 51
    template:
      - disable-seen-retry
      - series-metainfo
    filesystem:
      path: "/{? folder.root ?}{? folder.series ?}"
      retrieve: dirs
    manipulate:
      - title:
          replace:
            regexp: '$'
            format: ' S01E01'
    accept_all: yes
    if:
      - tvmaze_series_status == 'Ended': reject
    list_add:
      - trakt_list:
          account: "{? trakt.account ?}"
          list: "{? trakt.series ?}"
          type: shows


##### Clean the series that already ended from trakt series list
#
  clean-series-list:
    priority: 53
    delay: 8 day
    template:
      - disable-seen-retry
      - series-metainfo
      - pushbullet
    trakt_list:
      account: "{? trakt.account ?}"
      list: "{? trakt.series ?}"
      type: shows
    if:
      - tvmaze_series_status == 'Ended': accept
    list_add:
      - trakt_list:
          account: "{? trakt.account ?}"
          list: "{? trakt.ended ?}"
          type: shows
    list_remove:
      - trakt_list:
          account: "{? trakt.account ?}"
          list: "{? trakt.series ?}"
          type: shows
